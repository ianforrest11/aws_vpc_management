name: Terraform Init, Validate, & Plan Workflow

on:
  workflow_dispatch:  # Allow manual trigger

permissions:
  id-token: write   # Required for requesting the JWT
  contents: read    # Required for actions/checkout

jobs:
  terraform-apply-vpc-eip:
    name: Apply Terraform eip_management
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::128333337075:role/GitHubActionRunner
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Apply Terraform eip_management
        run: |
          cd eip_management/terraform
          terraform init
          terraform apply -auto-approve -var-file=../variables/terraform.tfvars

  terraform-apply-vpc-igw:
    name: Apply Terraform igw_management
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::128333337075:role/GitHubActionRunner
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Apply Terraform igw_management
        run: |
          cd igw_management/terraform
          terraform init
          terraform apply -auto-approve -var-file=../variables/terraform.tfvars

  terraform-apply-vpc-nat-gateway:
    name: Apply Terraform nat_gateway_management
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::128333337075:role/GitHubActionRunner
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Apply Terraform nat_gateway_management
        run: |
          cd nat_gateway_management/terraform
          terraform init
          terraform apply -auto-approve -var-file=../variables/terraform.tfvars

  terraform-apply-vpc-route-table:
    name: Apply Terraform route_table_management
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::128333337075:role/GitHubActionRunner
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Apply Terraform route_table_management
        run: |
          cd route_table_management/terraform
          terraform init
          terraform apply -auto-approve -var-file=../variables/terraform.tfvars

  terraform-apply-vpc-route-table-route:
    name: Apply Terraform route_table_route_management
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::128333337075:role/GitHubActionRunner
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Apply Terraform route_table_route_management
        run: |
          cd route_table_route_management/terraform
          terraform init
          terraform apply -auto-approve -var-file=../variables/terraform.tfvars

  terraform-apply-vpc-subnet:
    name: Apply Terraform subnet_management
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::128333337075:role/GitHubActionRunner
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Apply Terraform subnet_management
        run: |
          cd subnet_management/terraform
          terraform init
          terraform apply -auto-approve -var-file=../variables/terraform.tfvars

  terraform-apply-vpc-vpc:
    name: Apply Terraform vpc_management
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::128333337075:role/GitHubActionRunner
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Apply Terraform vpc_management
        run: |
          cd vpc_management/terraform
          terraform init
          terraform apply -auto-approve -var-file=../variables/terraform.tfvars